<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://cauliyang.github.io</id>
    <title>Vince&apos;s Tree Hole </title>
    <updated>2020-07-14T05:58:33.528Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://cauliyang.github.io"/>
    <link rel="self" href="https://cauliyang.github.io/atom.xml"/>
    <subtitle>Cherish time, just like cherishing your eyes.</subtitle>
    <logo>https://cauliyang.github.io/images/avatar.png</logo>
    <icon>https://cauliyang.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Vince&apos;s Tree Hole </rights>
    <entry>
        <title type="html"><![CDATA[关于劝退的思考-01]]></title>
        <id>https://cauliyang.github.io/52R07FPbs/</id>
        <link href="https://cauliyang.github.io/52R07FPbs/">
        </link>
        <updated>2020-04-22T12:28:33.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[生活随想-居家反思]]></title>
        <id>https://cauliyang.github.io/9jaKMB68a/</id>
        <link href="https://cauliyang.github.io/9jaKMB68a/">
        </link>
        <updated>2020-04-15T14:49:04.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[T-SNE by Python]]></title>
        <id>https://cauliyang.github.io/t-sne-by-python/</id>
        <link href="https://cauliyang.github.io/t-sne-by-python/">
        </link>
        <updated>2019-10-03T14:11:09.000Z</updated>
        <summary type="html"><![CDATA[<p><strong>This note records T-SNE by Python and  the  differences between  PCA and T-SNE</strong></p>
]]></summary>
        <content type="html"><![CDATA[<p><strong>This note records T-SNE by Python and  the  differences between  PCA and T-SNE</strong></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Bin map ]]></title>
        <id>https://cauliyang.github.io/xin-pian-shu-ju-gou-jian-yi-chuan-lian-suo-tu-biao-ji-shai-xuan-liu-cheng/</id>
        <link href="https://cauliyang.github.io/xin-pian-shu-ju-gou-jian-yi-chuan-lian-suo-tu-biao-ji-shai-xuan-liu-cheng/">
        </link>
        <updated>2019-09-09T01:06:33.000Z</updated>
        <summary type="html"><![CDATA[<p><strong>本文记录芯片数据如何筛选，以及使用bin map方法构建遗传图谱。</strong></p>
]]></summary>
        <content type="html"><![CDATA[<p><strong>本文记录芯片数据如何筛选，以及使用bin map方法构建遗传图谱。</strong></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vcftools  Manual]]></title>
        <id>https://cauliyang.github.io/vcftools-1/</id>
        <link href="https://cauliyang.github.io/vcftools-1/">
        </link>
        <updated>2019-08-20T04:54:06.000Z</updated>
        <summary type="html"><![CDATA[<p>整理并记录处理VCf文件格式的工具<strong>vcftools</strong>的使用方法，主要用于自己使用。<strong>（侵权，立即删。😊）</strong></p>
]]></summary>
        <content type="html"><![CDATA[<p>整理并记录处理VCf文件格式的工具<strong>vcftools</strong>的使用方法，主要用于自己使用。<strong>（侵权，立即删。😊）</strong></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[K-means  by Python]]></title>
        <id>https://cauliyang.github.io/k-means-cluster-by-python/</id>
        <link href="https://cauliyang.github.io/k-means-cluster-by-python/">
        </link>
        <updated>2019-08-07T14:09:35.000Z</updated>
        <summary type="html"><![CDATA[<p>本篇文章，详细记录如何使用<strong>Python</strong>进行<strong>K-means</strong>，分别用两种方法实现，并记录如何选取K值，并进行可视化评估结果。</p>
]]></summary>
        <content type="html"><![CDATA[<p>本篇文章，详细记录如何使用<strong>Python</strong>进行<strong>K-means</strong>，分别用两种方法实现，并记录如何选取K值，并进行可视化评估结果。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[PCA by Python ]]></title>
        <id>https://cauliyang.github.io/pca-by-python-2/</id>
        <link href="https://cauliyang.github.io/pca-by-python-2/">
        </link>
        <updated>2019-07-19T14:07:56.000Z</updated>
        <summary type="html"><![CDATA[<p><strong>This article documents two methods of PCA analysis using Python, and visualizes 2-dimensional results.</strong></p>
]]></summary>
        <content type="html"><![CDATA[<p><strong>This article documents two methods of PCA analysis using Python, and visualizes 2-dimensional results.</strong></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Blog Ideas ]]></title>
        <id>https://cauliyang.github.io/bo-ke-xiang-fa/</id>
        <link href="https://cauliyang.github.io/bo-ke-xiang-fa/">
        </link>
        <updated>2019-05-09T00:46:16.000Z</updated>
        <summary type="html"><![CDATA[<p>This Blog record learning process, welcome everyone to communicate with me!😊</p>
]]></summary>
        <content type="html"><![CDATA[<p>This Blog record learning process, welcome everyone to communicate with me!😊</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[about ]]></title>
        <id>https://cauliyang.github.io/about/</id>
        <link href="https://cauliyang.github.io/about/">
        </link>
        <updated>2019-01-25T11:09:48.000Z</updated>
    </entry>
</feed>