[{"content":"","date":"24 June 2023","permalink":"/tags/development/","section":"Tags","summary":"","title":"Development"},{"content":"","date":"24 June 2023","permalink":"/tags/macos/","section":"Tags","summary":"","title":"MacOS"},{"content":" Life is in the code, whether DNA or binary. ","date":"24 June 2023","permalink":"/posts/","section":"Posts","summary":"Life is in the code, whether DNA or binary.","title":"Posts"},{"content":" Alert # {{\u0026lt; alert \u0026gt;}} **Warning!** This action is destructive! {{\u0026lt; /alert \u0026gt;}} Warning! This action is destructive! {{\u0026lt; alert cardColor=\u0026#34;red\u0026#34; \u0026gt;}} **Warning!** This action is destructive! {{\u0026lt; /alert \u0026gt;}} Warning! This action is destructive! {{\u0026lt; alert textColor=\u0026#34;red\u0026#34; \u0026gt;}} **Warning!** This action is destructive! {{\u0026lt; /alert \u0026gt;}} Warning! This action is destructive! {{\u0026lt; alert \u0026#34;twitter\u0026#34; \u0026gt;}} **Warning!** This action is destructive! {{\u0026lt; /alert \u0026gt;}} Do not forget to follow me {{\u0026lt; alert icon=\u0026#34;fire\u0026#34; cardColor=\u0026#34;#e63946\u0026#34; iconColor=\u0026#34;#1d3557\u0026#34; textColor=\u0026#34;#f1faee\u0026#34; \u0026gt;}} **Warning!** This action is destructive! {{\u0026lt; /alert \u0026gt;}} Do not forget to follow me Article # {{\u0026lt; article link=\u0026#34;/posts/002-macos-configuration/\u0026#34; \u0026gt;}} macOS Setup for Development and Research Updated: 24 June 2023\u0026middot;3340 words\u0026middot;16 mins\u0026middot; 0 \u0026middot; 0 MacOS Development Badge # {{\u0026lt; badge \u0026gt;}} New article! {{\u0026lt; /badge \u0026gt;}} New article! Button # {{\u0026lt; button href=\u0026#34;#button\u0026#34; target=\u0026#34;_self\u0026#34; \u0026gt;}} Call to action {{\u0026lt; /button \u0026gt;}} Call to action {{\u0026lt; button href=\u0026#34;https://blowfish.page/docs/shortcodes/#icon\u0026#34; target=\u0026#34;_self\u0026#34; \u0026gt;}} Call to action {{\u0026lt; /button \u0026gt;}} Open external links Carousel # carousel is used to showcase multiple images in an interactive and visually appealing way. This allows a user to slide through multiple images while only taking up the vertical space of a single one. All images are displayed using the full width of the parent component and using one of the predefined aspect ratios of 16:9, 21:9 or 32:9.\nParameter Description images Required. A regex string to match image names. aspectRatio Optional. The aspect ratio for the carousel. Either 16-9, 21-9 or 32-9. It is set to 16-9 by default. interval Optional. The interval for the auto-scrooling, specified in milliseconds. Defaults to 2000 (2s) {{\u0026lt; carousel images=\u0026#34;{gallery/03.jpg, gallery/01.jpg, gallery/02.jpg, gallery/04.jpg}\u0026#34; \u0026gt;}} Previous Nextsads Example 2: 21:9 aspect ratio and regex-ed list of images\n{{\u0026lt; carousel images=\u0026#34;gallery/*\u0026#34; aspectRatio=\u0026#34;21-9\u0026#34; interval=\u0026#34;2500\u0026#34; \u0026gt;}} Previous Nextsads Chart # chart uses the Chart.js library to embed charts into articles using simple structured data. It supports a number of different chart styles and everything can be configured from within the shortcode. Simply provide the chart parameters between the shortcode tags and Chart.js will do the rest.\nRefer to the official Chart.js docs for details on syntax and supported chart types.\n{{\u0026lt; chart \u0026gt;}} type: \u0026#39;bar\u0026#39;, data: { labels: [\u0026#39;Tomato\u0026#39;, \u0026#39;Blueberry\u0026#39;, \u0026#39;Banana\u0026#39;, \u0026#39;Lime\u0026#39;, \u0026#39;Orange\u0026#39;], datasets: [{ label: \u0026#39;# of votes\u0026#39;, data: [12, 19, 3, 5, 3], }] } {{\u0026lt; /chart \u0026gt;}} Figure # Blowfish includes a figure shortcode for adding images to content. The shortcode replaces the base Hugo functionality in order to provide additional performance benefits.\nWhen a provided image is a page resource, it will be optimised using Hugo Pipes and scaled in order to provide images appropriate to different device resolutions. If a static asset or URL to an external image is provided, it will be included as-is without any image processing by Hugo.\nThe figure shortcode accepts six parameters:\nParameter Description src Required. The local path/filename or URL of the image. When providing a path and filename, the theme will attempt to locate the image using the following lookup order: Firstly, as a page resource bundled with the page; then an asset in the assets/ directory; then finally, a static image in the static/ directory. alt Alternative text description for the image. caption Markdown for the image caption, which will be displayed below the image. class Additional CSS classes to apply to the image. href URL that the image should be linked to. default Special parameter to revert to default Hugo figure behaviour. Simply provide default=true and then use normal Hugo shortcode syntax. Blowfish also supports automatic conversion of images included using standard Markdown syntax. Simply use the following format and the theme will handle the rest:\n![Alt text](image.jpg \u0026#34;Image caption\u0026#34;) Example:\n{{\u0026lt; figure src=\u0026#34;abstract.jpg\u0026#34; alt=\u0026#34;Abstract purple artwork\u0026#34; caption=\u0026#34;Photo by [Jr Korpa](https://unsplash.com/@jrkorpa) on [Unsplash](https://unsplash.com/)\u0026#34; \u0026gt;}} Photo by Jr Korpa on Unsplash ![Abstract purple artwork](abstract.jpg \u0026#34;Photo by [Jr Korpa](https://unsplash.com/@jrkorpa) on [Unsplash](https://unsplash.com/)\u0026#34;) Photo by Jr Korpa on Unsplash Gallery # gallery allows you to showcase multiple images at once, in a responsive manner with more varied and interesting layouts.\nIn order to add images to the gallery, use img tags for each image and add class=\u0026quot;grid-wXX\u0026quot; in order for the gallery to be able to identify the column width for each image. The widths available by default start at 10% and go all the way to 100% in 5% increments. For example, to set the width to 65%, set the class to grid-w65. Additionally, widths for 33% and 66% are also available in order to build galleries with 3 cols. You can also leverage tailwind\u0026rsquo;s responsive indicators to have a reponsive grid.\n{{\u0026lt; gallery \u0026gt;}} \u0026lt;img src=\u0026#34;gallery/01.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/02.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/03.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/04.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/05.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/06.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/07.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; {{\u0026lt; /gallery \u0026gt;}} GitHub Card # github allows you to quickly link a github repository, all while showing and updating in realtime stats about it, such as the number of stars and forks it has.\nParameter Description repo [String] github repo in the format of username/repo {{\u0026lt; github repo=\u0026#34;cauliyang/cauliyang\u0026#34; \u0026gt;}} cauliyang/cauliyang null 1 1 GitLab Card # gitlab allows you to quickly link a GitLab Project (GitLab\u0026rsquo;s jargon for repo). It displays realtime stats about it, such as the number of stars and forks it has. Unlike github it can\u0026rsquo;t display the main programming language of a project. Finally custom GitLab instance URL can be provided, as long as the api/v4/projects/ endpoint is available, making this shortcode compatible with most self-hosted / entreprise deployments.\nParameter Description projectID [String] gitlab numeric ProjectID baseURL [String] optional gitlab instance URL, default is https://gitlab.com/ {{\u0026lt; gitlab projectID=\u0026#34;278964\u0026#34; \u0026gt;}} GitLab.org / GitLab GitLab is an open source end-to-end software development platform with built-in version control, issue tracking, code review, CI/CD, and more. Self-host GitLab on your own servers, in a container, or on a cloud provider. 4467 8576 Icon # icon outputs an SVG icon and takes the icon name as its only parameter. The icon is scaled to match the current text size.\nExample:\n{{\u0026lt; icon \u0026#34;github\u0026#34; \u0026gt;}} Output: Icons are populated using Hugo pipelines which makes them very flexible. Blowfish includes a number of built-in icons for social, links and other purposes. Check the icon samples page for a full list of supported icons. Custom icons can be added by providing your own icon assets in the assets/icons/ directory of your project. The icon can then be referenced in the shortcode by using the SVG filename without the .svg extension. Icons can also be used in partials by calling the icon partial.\nKatex # The katex shortcode can be used to add mathematical expressions to article content using the KaTeX package. Refer to the online reference of supported TeX functions for the available syntax. To include mathematical expressions in an article, simply place the shortcode anywhere with the content. It only needs to be included once per article and KaTeX will automatically render any markup on that page. Both inline and block notation are supported. Inline notation can be generated by wrapping the expression in \\\\( and \\\\) delimiters. Alternatively, block notation can be generated using $$ delimiters.\nExample:\n{{\u0026lt; katex \u0026gt;}} \\\\(f(a,b,c) = (a^2+b^2+c^2)^3\\\\) \\(f(a,b,c) = (a^2+b^2+c^2)^3\\)\nLead # lead is used to bring emphasis to the start of an article. It can be used to style an introduction, or to call out an important piece of information. Simply wrap any Markdown content in the lead shortcode.\nExample:\n{{\u0026lt; lead \u0026gt;}} When life gives you lemons, make lemonade. {{\u0026lt; /lead \u0026gt;}} When life gives you lemons, make lemonade. List # List will display a list of recent articles. This shortcode requires a limit value to constraint the list. Additionally, it supports a where and a value in order to filter articles by their parameters. Note that this shortcode will not display its parent page but it will count for the limit value.\nParameter Description limit Required. the number of recent articles to display. title Optional title for the list, default is Recent where The variable to be used for the query of articles e.g. Type value The value that will need to match the parameter defined in where for the query of articles e.g. for where == Type a valid value could be sample The where and value values are used in the following query where .Site.RegularPages $where $value in the code of the shortcode. Check Hugo docs to learn more about which parameters are available to use. {{\u0026lt; list limit=2 \u0026gt;}} Recent macOS Setup for Development and Research Updated: 24 June 2023\u0026middot;3340 words\u0026middot;16 mins\u0026middot; 0 \u0026middot; 0 MacOS Development {{\u0026lt; list title=\u0026#34;Samples\u0026#34; limit=5 where=\u0026#34;Type\u0026#34; value=\u0026#34;sample\u0026#34; \u0026gt;}} Posts macOS Setup for Development and Research Updated: 24 June 2023\u0026middot;3340 words\u0026middot;16 mins\u0026middot; 0 \u0026middot; 0 MacOS Development Mermaid # mermaid allows you to draw detailed diagrams and visualisations using text. It uses Mermaid under the hood and supports a wide variety of diagrams, charts and other output formats.\nSimply write your Mermaid syntax within the mermaid shortcode and let the plugin do the rest.\nRefer to the official Mermaid docs for details on syntax and supported diagram types.\nExample:\n{{\u0026lt; mermaid \u0026gt;}} graph LR; A[Lemons]--\u0026gt;B[Lemonade]; B--\u0026gt;C[Profit] {{\u0026lt; /mermaid \u0026gt;}} graph LR; A[Lemons]--\u003eB[Lemonade]; B--\u003eC[Profit] Swatches # swatches outputs a set of up to three different colors to showcase color elements like a color palette. This shortcode takes the HEX codes of each color and creates the visual elements for each.\n{{\u0026lt; swatches \u0026#34;#64748b\u0026#34; \u0026#34;#3b82f6\u0026#34; \u0026#34;#06b6d4\u0026#34; \u0026gt;}} Output Timeline # The timeline creates a visual timeline that can be used in different use-cases, e.g. professional experience, a project\u0026rsquo;s achievements, etc. The timeline shortcode relies on the timelineItem sub-shortcode to define each item within the main timeline. Each item can have the following properties.\nParameter Description icon the icon to be used in the timeline visuals. header header for each entry badge text to place within the top right badge subheader entry\u0026rsquo;s subheader Example:\n{{\u0026lt; timeline \u0026gt;}} {{\u0026lt; timelineItem icon=\u0026#34;github\u0026#34; header=\u0026#34;header\u0026#34; badge=\u0026#34;badge test\u0026#34; subheader=\u0026#34;subheader\u0026#34; \u0026gt;}} Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus non magna ex. Donec sollicitudin ut lorem quis lobortis. Name ac ipsum libero. Sed a ex eget ipsum tincidunt venenatis quis sed nisl. Pellentesque sed urna vel odio consequat tincidunt id ut purus. Name sollicitudin est sed dui interdum rhoncus. {{\u0026lt; /timelineItem \u0026gt;}} {{\u0026lt; timelineItem icon=\u0026#34;code\u0026#34; header=\u0026#34;Another Awesome Header\u0026#34; badge=\u0026#34;date - present\u0026#34; subheader=\u0026#34;Awesome Subheader\u0026#34; \u0026gt;}} With html code \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Coffee\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Tea\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Milk\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; {{\u0026lt; /timelineItem \u0026gt;}} {{\u0026lt; timelineItem icon=\u0026#34;star\u0026#34; header=\u0026#34;Shortcodes\u0026#34; badge=\u0026#34;AWESOME\u0026#34; \u0026gt;}} With other shortcodes {{\u0026lt; gallery \u0026gt;}} \u0026lt;img src=\u0026#34;gallery/01.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/02.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/03.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/04.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/05.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/06.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; \u0026lt;img src=\u0026#34;gallery/07.jpg\u0026#34; class=\u0026#34;grid-w33\u0026#34; /\u0026gt; {{\u0026lt; /gallery \u0026gt;}} {{\u0026lt; /timelineItem \u0026gt;}} {{\u0026lt; /timeline \u0026gt;}} header badge test subheader Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus non magna ex. Donec sollicitudin ut lorem quis lobortis. Name ac ipsum libero. Sed a ex eget ipsum tincidunt venenatis quis sed nisl. Pellentesque sed urna vel odio consequat tincidunt id ut purus. Name sollicitudin est sed dui interdum rhoncus. Another Awesome Header date - present Awesome Subheader With html code Coffee Tea Milk Shortcodes AWESOME With other shortcodes TypeIt # TypeIt is the most versatile JavaScript tool for creating typewriter effects on the planet. With a straightforward configuration, it allows you to type single or multiple strings that break lines, delete \u0026amp; replace each other, and it even handles strings that contain complex HTML.\nBlowfish implements a sub-set of TypeIt features using a shortcode. Write your text within the typeit shortcode and use the following parameters to configure the behavior you want.\nParameter Description tag [String] html tag that will be used to render the strings. classList [String] List of css classes to apply to the html element. initialString [String] Initial string that will appear written and will be replaced. speed [number] Typing speed, measured in milliseconds between each step. lifeLike [boolean] Makes the typing pace irregular, as if a real person is doing it. startDelay [number] The amount of time before the plugin begins typing after being initialized. breakLines [boolean] Whether multiple strings are printed on top of each other (true), or if they\u0026rsquo;re deleted and replaced by each other (false). waitUntilVisible [boolean] Determines if the instance will begin when loaded or only when the target element becomes visible in the viewport. The default is true loop [boolean] Whether your strings will continuously loop after completing Example 1:\n{{\u0026lt; typeit \u0026gt;}} Lorem ipsum dolor sit amet {{\u0026lt; /typeit \u0026gt;}} Example 2:\n{{\u0026lt; typeit tag=h1 lifeLike=true \u0026gt;}} Lorem ipsum dolor sit amet, consectetur adipiscing elit. {{\u0026lt; /typeit \u0026gt;}} Example 3:\n{{\u0026lt; typeit tag=h3 speed=50 breakLines=false loop=true \u0026gt;}} Lorem ipsum dolor sit amet, consectetur adipiscing elit. {{\u0026lt; /typeit \u0026gt;}} ","date":"24 June 2023","permalink":"/posts/short-code/","section":"Posts","summary":"Alert # {{\u0026lt; alert \u0026gt;}} **Warning!","title":"Short Code Example"},{"content":"","date":"24 June 2023","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":"24 June 2023","permalink":"/","section":"Welcome to my blog!","summary":"","title":"Welcome to my blog!"},{"content":" 0. Changes # 2023-02-16:\nadd ouch add topgrade add font add imagemagick add youtobe-dl add latex stuff add lsd add fd add fzf add ripgrep add procs add zoxide add lazygit add bottom modified Editor changed cover image add windows management section remove iterm2 remove zsh remove tldr remove tmux remove dash remove cleanshot remove sensei 1. Introduction # Given the time and effort required for migrating configurations, I have decided to create a blog documenting the entire process. The configurations will be divided into two sections, the first of which will cover the software that I frequently use, and the second will contain the configuration files themselves. As I have recently acquired a MacBook Pro M1 model, here is a list of the tools I am currently utilizing.\n2. Package Manager # Homebrew If you\u0026rsquo;re a macOS user looking to expand your software options beyond what\u0026rsquo;s available in the App Store, Homebrew is an excellent solution. Homebrew is a free and open-source package manager that simplifies the process of installing software on your Mac.\nHere\u0026rsquo;s how to get started with Homebrew:\nOpen the Terminal app, which you can find in the Utilities folder within the Applications folder. In the Terminal window, paste the following command and hit enter to install Homebrew: /bin/bash -c \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\u0026#34; You may be prompted to enter your password during the installation process. This is normal and required to give Homebrew the necessary permissions to install software on your system.\nOnce the installation is complete, you can start using Homebrew to install software packages. For example, if you want to install the popular text editor vim you can simply type the following command into the Terminal window:\nbrew install vim Homebrew will then download and install the latest version of ``vim, along with any dependencies that it requires.\nTo update Homebrew itself and all installed packages, use the following command: brew update \u0026amp;\u0026amp; brew upgrade This will update Homebrew to the latest version and upgrade all installed packages to their latest versions. Overall, Homebrew is an excellent tool for macOS users who want to expand their software options beyond what\u0026rsquo;s available in the App Store. It\u0026rsquo;s simple to install and use, and it can save you a lot of time and effort when it comes to installing and managing software on your Mac.\n3. Terminal Working Space # The first portion of the blog will feature an overview of the applications and tools in my workflow, along with brief descriptions of their uses. For those with a specific interest in a particular app, links will be provided for further reading. This will allow readers to learn more about the tools I rely on and potentially discover new resources for their own use.\niterm2 → alacritty zsh → fish tmux → zellij However, I still leave information about previous tools. I also write another blog to talk about how to move to new terminal setting.\nAlacritty Alacritty is a free and open-source terminal emulator that is designed to be both fast and lightweight. It\u0026rsquo;s written in Rust, a high-performance programming language, and is available for multiple operating systems, including macOS, Linux, and Windows.\nHere\u0026rsquo;s how to get started with Alacritty on macOS:\nFirst, make sure that you have Homebrew installed on your system by following the steps in my previous tutorial. Homebrew is the easiest way to install Alacritty on macOS. Open the Terminal app and type the following command to install Alacritt brew install --cask alacritty This command will install Alacritty and all of its dependencies on your system.\nOnce the installation is complete, you can launch Alacritty by typing \u0026ldquo;alacritty\u0026rdquo; in the Terminal window. By default, Alacritty uses a simple and minimalistic configuration. However, you can customize it by creating a configuration file at the following location: ~/.config/alacritty/alacritty.yml Here, you can set things like the font size, color scheme, and other preferences to suit your needs. You can find more information on how to customize Alacritty on the official website or in the documentation.\nOverall, Alacritty is an excellent choice for users who want a fast and lightweight terminal emulator that\u0026rsquo;s easy to use and customize. With its simple installation process and easy-to-use configuration options, it\u0026rsquo;s a great alternative to other popular terminal emulators on macOS.\nZellij Zellij is a free and open-source terminal workspace that allows you to create and manage multiple terminal sessions within a single window. Compared to tmux, zellij provide more friendly interface.\nHere\u0026rsquo;s how to get started with Zellij:\nbrew install zellij By default, Zellij uses a simple and minimalistic configuration. However, you can customize it by creating a configuration file at the following location:\n~/.config/zellij/config.kdl Here, you can set things like the keybindings, color scheme, and other preferences to suit your needs. You can find more information on how to customize Zellij on the official website or in the documentation.\nOverall, Zellij is an excellent choice for users who want a fast, lightweight, and customizable terminal workspace. With its simple installation process and easy-to-use configuration options, it\u0026rsquo;s a great alternative to other popular terminal workspaces on macOS.\nFish Fish, or the \u0026ldquo;Friendly Interactive SHell\u0026rdquo; is a free and open-source command-line shell for Unix-based operating systems like macOS and Linux. It\u0026rsquo;s designed to be both easy to use and highly customizable, with a modern and user-friendly interface. It includes some valuable features including autosuggestion by default in comparison with zsh. Hence, you can use it out of box without any efforts for configuration.\nHere\u0026rsquo;s how to get started with Fish on macOS:\nFirst, make sure that you have Homebrew installed on your system by following the steps in my previous tutorial. Homebrew is the easiest way to install Fish on macOS.\nOpen the alacritty and type the following command to install Fish:\nbrew install fish Once the installation is complete, you can launch Fish by typing \u0026ldquo;fish\u0026rdquo; in the Terminal window. This will start a new Fish shell session.\nBy default, Fish uses a simple and minimalistic configuration. However, you can customize it by creating a configuration file at the following location:\n~/.config/fish/config.fish Fish has plugins system as well, and I use fisher to manage plugins. Here, you can set things like the prompt, aliases, and other preferences to suit your needs. You can find more information on how to customize Fish on the official website or in the documentation.\nOne of the unique features of Fish is its auto-suggestion system, which suggests commands as you type based on your command history. This can save you time and effort when working with the command line. Overall, Fish is an excellent choice for users who want a modern and user-friendly command-line shell that\u0026rsquo;s easy to use and highly customizable. With its simple installation process and unique features like auto-suggestion, it\u0026rsquo;s a great alternative to other popular shells on macOS.\n4. Command Line Application # Git Git is a free and open-source distributed version control system designed to handle everything from small to very large projects with speed and efficiency. Also, Git a t tool used in the terminal to download and upload data or code to the GitHub. Similarly, Git is shipped with macOS, so you may need to update that by brew upgrade git.\nHere\u0026rsquo;s how to get started with git on macOS:\nbrew install git Conda Conda is a package, dependency, and environment management for any language such as Python, R, Ruby, C/C++, and more. Conda is an open-source package management system and environment management system that runs on Windows, macOS, and Linux. Conda quickly installs, runs, and updates packages and their dependencies. Conda easily creates, saves, loads, and switches between environments on your local computer. It was created for Python programs, but it can package and distribute software for any language.\nIn addition, I recommend that you use mamba to wrap Conda to accelerate running speed. However, you should install miniforge that is a minimal installer for conda with some pre-configured features if you use M1 model. miniforge emphasis on supporting various CPU architectures including Apple M1. You can also use mamba or micromamba to install packages in conda environment.\nTree tree is a recursive directory listing program that produces a depth-indented listing of files. With no arguments, tree lists the files in the current directory. When directory arguments are given, tree lists all the files or directories found in the given directories each in turn. Upon completion of listing all files and directories found, tree returns the total number of files.\ntree Here\u0026rsquo;s how to get started with tree on macOS:\nbrew install tree cheat.sh Cheat.sh is a free and open-source web service that provides quick access to a wide range of cheat sheets and examples for various programming languages and command-line tools. It\u0026rsquo;s designed to be fast, lightweight, and accessible from any device with an internet connection.\nCheat.sh is an excellent choice for users who want quick and easy access to cheat sheets and examples for various programming languages and command-line tools. With its simple and intuitive interface, it\u0026rsquo;s a great resource for both beginners and experienced users alike.\ndust dust = du + rust. It like du but more intuitive. Dust is a free and open-source utility for analyzing disk usage. It\u0026rsquo;s designed to be fast, flexible, and easy to use, with a simple command-line interface that allows you to quickly identify and analyze disk usage patterns.\nHere\u0026rsquo;s how to get started with Dust:\nFirst, make sure that you have Homebrew installed on your system by following the steps in my previous tutorial. Homebrew is the easiest way to install Dust on macOS. Open the alacritty and type the following command to install Dust: brew install dust hyperfine Hyperfine is a free and open-source command-line benchmarking utility. It\u0026rsquo;s designed to be fast, flexible, and easy to use, with a simple command-line interface that allows you to quickly measure the performance of your shell commands and scripts.\nHere\u0026rsquo;s how to get started with Hyperfine:\nbrew install hyperfine Hyperfine also provides several options for customizing the benchmarking process, such as specifying the number of runs, warmup iterations, and statistical confidence interval. You can find more information on how to use these options in the official documentation or by running \u0026ldquo;hyperfine \u0026ndash;help\u0026rdquo; in the terminal.\nouch ouch stands for obvious unified compression helper, and it support tar, .zip, .gz, .xz, .lzma, .bz, .bz2, .lz4, .sz and .zst. ouch decompress a.zip for decompressing, ouch cmopress one.txt two.txt archive.zip for compression.\nHere\u0026rsquo;s how to get started with ouch:\ncargo install ouch topgrade Topgrade is a free and open-source utility for upgrading all your packages. It\u0026rsquo;s designed to be fast, flexible, and easy to use, with a simple command-line interface that allows you to quickly upgrade your packages without worrying about dependencies or conflicts.\nHere\u0026rsquo;s how to get started with Topgrade:\nbrew install topgrade imagemagick ImageMagick is a free and open-source command-line utility for manipulating and converting images. It\u0026rsquo;s designed to be fast, flexible, and easy to use, with a simple command-line interface that allows you to perform a wide range of image processing tasks.\nHere\u0026rsquo;s how to get started with ImageMagick:\nbrew install imagemagick Once the installation is complete, you can use ImageMagick by running the \u0026ldquo;convert\u0026rdquo; command in the Terminal window, followed by the name of the input file, the name of the output file, and any optional parameters that you want to use. For example, to resize an image and save it as a JPEG file, you can type the following:\nconvert input.jpg -resize 800x600 output.jpg This will resize the \u0026ldquo;input.jpg\u0026rdquo; file to 800x600 pixels and save the result as \u0026ldquo;output.jpg\u0026rdquo;. You can find more information on how to use the \u0026ldquo;convert\u0026rdquo; command and its various parameters in the official documentation or by running \u0026ldquo;man convert\u0026rdquo; in the terminal.\nIn addition to the \u0026ldquo;convert\u0026rdquo; command, ImageMagick provides a wide range of other commands for performing various image processing tasks, such as \u0026ldquo;identify\u0026rdquo; for displaying image metadata, \u0026ldquo;composite\u0026rdquo; for compositing multiple images, and \u0026ldquo;montage\u0026rdquo; for creating image montages. You can find a full list of ImageMagick commands and their descriptions in the official documentation. ImageMagick also provides a powerful and flexible API that you can use to integrate image processing functionality into your own programs and scripts. The API is available in several programming languages, including C, Perl, Python, and Ruby, and provides a wide range of functions for manipulating and converting images.\nyoutobe-dl youtube-dl is a free and open-source command-line utility for downloading videos from YouTube and many other video sharing websites. It\u0026rsquo;s designed to be fast, flexible, and easy to use, with a simple command-line interface that allows you to download videos with various options.\nHere\u0026rsquo;s how to get started with youtube-dl:\nbrew install youtube-dl Once the installation is complete, you can use youtube-dl by running the \u0026ldquo;youtube-dl\u0026rdquo; command in the Terminal window, followed by the URL of the video that you want to download. For example, to download a YouTube video, you can type the following:\nyoutube-dl https://www.youtube.com/watch?v=VIDEO_ID Replace \u0026ldquo;VIDEO_ID\u0026rdquo; with the actual ID of the video that you want to download. youtube-dl will automatically detect the best available format and quality for the video, and save it to your current working directory. In addition to downloading videos, youtube-dl provides a wide range of other options for customizing the download process, such as selecting a specific video format, downloading only the audio, downloading subtitles, and downloading entire playlists or channels. You can find more information on how to use these options in the official documentation or by running \u0026ldquo;youtube-dl \u0026ndash;help\u0026rdquo; in the terminal.\n[lsd] 5. Windows Management # If you\u0026rsquo;re looking for a powerful and flexible way to manage windows on your Mac, you might want to consider using yabai, skhd, and sketchybar. These are a set of open-source utilities that provide advanced window management features, allowing you to control the layout, positioning, and sizing of windows with ease. I have blog to talk about how to use the tools.\nHere\u0026rsquo;s how to get started:\nFirst, you\u0026rsquo;ll need to install Homebrew on your Mac if you haven\u0026rsquo;t already. You can follow the steps in my previous tutorial to do this.\nOnce Homebrew is installed, open the Terminal app (alacritty) and type the following command to install yabai, skhd, and skychybar:\nbrew install koekeishiya/formulae/yabai brew install koekeishiya/formulae/skhd brew tap FelixKratz/formulae brew install sketchybar Once the installations are complete, you\u0026rsquo;ll need to create configuration files for yabai and skhd. These files define the keyboard shortcuts and settings that you\u0026rsquo;ll use to control windows.\nAnd that\u0026rsquo;s it! With yabai, skhd, and skychybar, you can now easily manage windows on your Mac using keyboard shortcuts. These tools offer a lot of flexibility, so don\u0026rsquo;t be afraid to experiment and find\nAlternative combination:\nMagnet A tool is used to manage windows for different applications Rectangle A tool to move and resize windows in macOS AltTab is a good tool to manage windows for different applications 6. Editor # When it comes to coding on macOS, you have a variety of options for text editors, including Neovim, VSCode, and JetBrains. Each editor has its own strengths and weaknesses, and choosing the right one will depend on your personal preferences and needs. In this section, I\u0026rsquo;ll introduce each editor and compare them to help you decide which one is right for you.\nNeovim Neovim is a fork of the popular text editor Vim, with the goal of modernizing and improving upon Vim\u0026rsquo;s functionality. It\u0026rsquo;s a powerful text editor that\u0026rsquo;s highly customizable, with a strong focus on keyboard shortcuts and extensibili great choice if you\u0026rsquo;re looking for a lightweight, fast, and highly configurable editor. It\u0026rsquo;s great for coding in a terminal, with a vast array of plugins available for customizing your workflow. However, it does have a steeper learning curve than some other editors.\nNeovim is a great choice if you\u0026rsquo;re looking for a lightweight, fast, and highly configurable editor. It\u0026rsquo;s great for coding in a terminal, with a vast array of plugins available for customizing your workflow. However, it does have a steeper learning curve than some other editors. Neovim is my favorite tool and I have written a blog about personal developed environment.\nVS Code VSCode is a popular open-source text editor developed by Microsoft. It\u0026rsquo;s built on top of the Electron framework and provides a modern, customizable user interface. It supports a wide range of programming languages and has a vast collection of extensions available.\nVSCode is a great choice if you\u0026rsquo;re looking for a powerful and user-friendly editor that supports a wide range of programming languages. It\u0026rsquo;s a popular choice among developers for its ease of use, extensive plugin ecosystem, and powerful debugging features.\nJetBrains JetBrains is a company that develops a variety of popular IDEs, including IntelliJ IDEA, PyCharm, and Clion. These IDEs provide a complete development environment, with powerful code editors, debugging tools, and support for a wide range of programming languages and frameworks. JetBrains is a great choice if you\u0026rsquo;re looking for a complete development environment that includes everything you need to build complex applications. It\u0026rsquo;s particularly useful if you\u0026rsquo;re working with a large codebase or complex projects, as it provides powerful refactoring tools and an intelligent code editor.\nHere\u0026rsquo;s a quick rundown of how the editors compare:\nNeovim is highly customizable and has a strong focus on keyboard shortcuts, but has a steeper learning curve. VSCode is user-friendly and supports a wide range of programming languages, with a vast collection of plugins available, but can be slow and resource-intensive. JetBrains provides a complete development environment with powerful code editors, debugging tools, and support for a wide range of programming languages and frameworks, but can be costly and resource-intensive.\nOverall, each editor has its own strengths and weaknesses, and choosing the right one will depend on your personal preferences and needs. Neovim is a great choice if you\u0026rsquo;re looking for a highly customizable and fast editor, while VSCode is a popular choice if you\u0026rsquo;re looking for a user-friendly editor that supports a wide range of programming languages. JetBrains is a great choice if you\u0026rsquo;re looking for a complete development environment.\n7. Application # This part list variety of applications used for different goals. Every application has a one-word description. Some of them can be installed by Homebrew. My config files and installation commands are kept in GitHub.\nAlfred A tool can give your different control and efficiency in mac Default Folder x A tool can empower default finder Docker is a tool to create a safe environment for development or production Chrome There is no reason not to use it. ❤️ IINA Great tool that is used to play video Imagine Compress images before you upload somewhere. light and powerful! Office 😄 MonitorControl It manages brightness and sound for different monitors Monodraw A tool is used to design fancy ASCII strings PDF Expert Best PDF reader in Mac PicGo A tool is used to upload images to Web service like GitHub. It is beneficial for writing blogs. SnippetsLab My favorite tool stored code snippets, and it can be integrated with Alfred Xcode 😄 Zoom MEETING! Xmind always makes your creative and keeps your minds clears Transmit Upload, download and manage files on servers with beautiful and powerful UI Time Sink is a good tool to record your using time to track your behavior SoundSource can help you get truly powerful control over all the audio Reeder 5 A RSS reader and keep control of your reading Notion A excellent notion tool One Switch can help you finish some progress like keep awake and hide icons on one button iShot A great tool to take screenshots Google Drive is a cloud storage service that allows you to store and share files with anyone Ferdi can integrate other tools like Gmail, Slack, or others to allow you manage information in one place Bartender is a great application to manage icons of all your working tools AlDente is able to keep your battery healthy by controlling the power consumption Zotero is my favorite tools to manage research papers ","date":"26 November 2022","permalink":"/posts/002-macos-configuration/","section":"Posts","summary":"0.","title":"macOS Setup for Development and Research"},{"content":"Hi there! My name is Yangyang Li, and I\u0026rsquo;m a Ph.D. candidate in the DGP Program at Northwestern University Feinberg School of Medicine.\nI\u0026rsquo;m passionate about developing algorithm and using programming languages like C++, Rust, and Python to solve complex problems in the field of Computational Biology. As a Ph.D. student, I have the opportunity to work on exciting research projects that push the boundaries of what we know and have the potential to make a real impact in the world.\nIn addition to my studies and research, I enjoy staying up-to-date on the latest developments in the tech industry and learning new programming languages and techniques. When I\u0026rsquo;m not busy with school or work, you can find me tinkering with new projects or exploring the outdoors. I started this website as a way to share my experiences, insights, and resources with others who are interested in programming and deep learning. I hope you\u0026rsquo;ll find something helpful or interesting here!\nA cup of coffee will support me to insist sharing 😄\n","date":"1 January 0001","permalink":"/about/","section":"Welcome to my blog!","summary":"Hi there!","title":"About"},{"content":"","date":"1 January 0001","permalink":"/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"","date":"1 January 0001","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"1 January 0001","permalink":"/series/","section":"Series","summary":"","title":"Series"}]