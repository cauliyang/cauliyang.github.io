<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Yangyang Li's Geek Logs</title><link>https://yangyangli.top/posts/</link><description>Recent content in Posts on Yangyang Li's Geek Logs</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Yangyang Li - [Creative Commons Attribution 4.0 International License](https://creativecommons.org/licenses/by/4.0/).</copyright><lastBuildDate>Thu, 15 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://yangyangli.top/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Make A Powerful Terminal Workspace</title><link>https://yangyangli.top/posts/012-make-a-powerful-ternimal/</link><pubDate>Thu, 15 Dec 2022 00:00:00 +0000</pubDate><guid>https://yangyangli.top/posts/012-make-a-powerful-ternimal/</guid><description>I recently change my terminal setup from iTerm2 + Zsh + Tmux to Alacritty + Fish + Zellij. I found that my new combination is really Powerful
1. Alacritty print(&amp;#34;this is a test&amp;#34;) println!(&amp;#34;this is &amp;#34;); 2. Zellij thisjo ths</description></item><item><title>Configuration of macOS for development and research</title><link>https://yangyangli.top/posts/002-macos-configuration/</link><pubDate>Sat, 26 Nov 2022 23:10:02 -0600</pubDate><guid>https://yangyangli.top/posts/002-macos-configuration/</guid><description>1. Introduction Configuration migration is time-consuming task so that I decide to write a blog to record the process. I will divide the configuration into two parts. In the first part, I will introduce the software I heavily use, and then share the configuration files in the second part. My newest device is MacBook Pro of M1 model, Here is a list of tools I use:
Most software are installed by Homebrew and how to install will be shown in every section.</description></item><item><title>Bioinformatics Algorithm Library aka BINARY</title><link>https://yangyangli.top/posts/011-bioinformatics-algorithm-library/</link><pubDate>Mon, 26 Sep 2022 13:07:28 -0500</pubDate><guid>https://yangyangli.top/posts/011-bioinformatics-algorithm-library/</guid><description>The library is a collection of algorithms and data structures that are designed for modern C++ bioinformatics applications. You can use the library in your own projects or as a part of a larger project.
The library will include efficient data structure and algorithm implemented by Modern C++.
The design philosophy of the library:
Embrace C++20 standard Supports modern C++ features Support concurrency and thread safety Priority is given to safety and clean design Hard to use wrongly Testing extensively Python bindings The current project is developing and evolving, and changes will be made to the library as time goes on.</description></item><item><title>Bioinformatics Toolbox Aka Boss</title><link>https://yangyangli.top/posts/009-new-tool-bioinformatics-toolbox-aka-boss/</link><pubDate>Sun, 25 Sep 2022 23:22:31 -0500</pubDate><guid>https://yangyangli.top/posts/009-new-tool-bioinformatics-toolbox-aka-boss/</guid><description>BOSS is a bioinformatics toolbox, which will contain efficient tools. It is written in modern C++ and is tested exhaustively. It is designed to be easy to use and time-efficient. BOSS is a free software and is distributed under the terms of the GNU General Public License V3.
Currently, BOSS contains the following tools:
boss-fqsp : A fast tool for splitting fastq files into paired files. boss-squeue: Summary Status of Jobs in HPC Queues It is now evolving and will be updated frequently.</description></item><item><title>Comprehensive Resources for Python Development</title><link>https://yangyangli.top/posts/005-important-resources-for-python-development/</link><pubDate>Thu, 16 Jun 2022 16:40:06 -0500</pubDate><guid>https://yangyangli.top/posts/005-important-resources-for-python-development/</guid><description>Python project for development 1. Git Using git-flow to automate your git branching workflow
Gitflow
Git-flow-completion
Understand how to write a good commit message
Awesome-Profile-README-templates
Mergigy for pull request
Jupyter notebook diff and merge
2. Document system 2.1 Sphinx and RST Sphinx and RST syntax guide (0.9.3) Python Docstring Sphinx and RST Syntax reStructuredText Markup Specification Sphinx Themes Gallery 2.2 pdoc pdoc 2.3 Mkdocs Getting Started - MkDocs 3. Module statistics for installation Pepy stats PyPI Stats 4.</description></item><item><title>Guide for building Cpp Development in Bioinformatics</title><link>https://yangyangli.top/posts/003-guide-build-cpp-development-env-with-htslib/</link><pubDate>Wed, 15 Jun 2022 23:17:30 -0500</pubDate><guid>https://yangyangli.top/posts/003-guide-build-cpp-development-env-with-htslib/</guid><description>1. Config Compile Environment I am preparing to develop a tool using C++ in the Linux and macOS environments. Usually, I do not have root rights to download dependencies for C++ using apt-get install -y denpendencies directly in Ubuntu. However, I usually feel frustrated when the dependency chain is complicated. That means I need to download and compile every library I use. This may cost you one night or even one week.</description></item><item><title>A Python Toolbox - Pybox</title><link>https://yangyangli.top/posts/001-a-wonderful-library-you-must-not-know/</link><pubDate>Fri, 03 Dec 2021 00:03:50 -0600</pubDate><guid>https://yangyangli.top/posts/001-a-wonderful-library-you-must-not-know/</guid><description>1. Introduction Many people have been asking for a toolbox of useful commands for their everyday tasks. I also wanted to build a toolbox for my own use, and I also wanted to make it as easy as possible to use. Hence, I decided to build a toolbox for Python, which is a valuable tool for other people to use. I will add more commands to this toolbox as I find them useful in the future.</description></item><item><title>PCA by Python</title><link>https://yangyangli.top/posts/010-pca-by-python/</link><pubDate>Sun, 04 Apr 2021 23:58:37 +0800</pubDate><guid>https://yangyangli.top/posts/010-pca-by-python/</guid><description>1. Introduction 1.1 What&amp;rsquo;s PCA? When it comes to methods of reducing dimension, PCA that is an unsupervised linear transformation technique, must be not ignored. Moreover, if you want to know the subtle relationships among data set and reduce the computational complexity in downstream analysis, the PCA may be your best choice! Meanwhile, if you would like to present your data in a 2-dimension or 3-dimension coordinate system, and PCA would sweep your problems!</description></item><item><title>Nei Saitou Neighbor Joining</title><link>https://yangyangli.top/posts/008-nei-saitou-neighbor-joining/</link><pubDate>Sat, 03 Apr 2021 11:15:00 +0800</pubDate><guid>https://yangyangli.top/posts/008-nei-saitou-neighbor-joining/</guid><description>1. Background Before diving into code, the description of NJ algorithm can be found in , where first column indicates parent node, and second column is its children node, the last column is the value of edge.
2. Neighbor Joining Algorithm The Neighbor-joining Algorithm Given a distance matrix d compute an uprooted tree topology complete with edge lengths that tries to preserve the additive property: $d_{i,m} + d_{j,m} âˆ’ d_{i,j} = 2d_{k,m}$ where $k$ is the k-th node on both routes from $i$ and $j$ to $m$.</description></item></channel></rss>