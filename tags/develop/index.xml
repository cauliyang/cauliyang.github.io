<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Develop on Bytes of Life</title><link>https://yangyangli.top/tags/develop/</link><description>Recent content in Develop on Bytes of Life</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>2023 &lt;a class='hover:underline hover:decoration-primary-400 hover:text-primary-500' href=https://yangyangli.top target=_blank rel='noopener noreferrer'>Yangyang Li&lt;/a></copyright><lastBuildDate>Sun, 25 Sep 2022 23:22:31 -0500</lastBuildDate><atom:link href="https://yangyangli.top/tags/develop/index.xml" rel="self" type="application/rss+xml"/><item><title>Bioinformatics Toolbox Aka Boss</title><link>https://yangyangli.top/projects/009-new-tool-bioinformatics-toolbox-aka-boss/</link><pubDate>Sun, 25 Sep 2022 23:22:31 -0500</pubDate><guid>https://yangyangli.top/projects/009-new-tool-bioinformatics-toolbox-aka-boss/</guid><description>BOSS is a bioinformatics toolbox, which will contain efficient tools.</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://yangyangli.top/projects/009-new-tool-bioinformatics-toolbox-aka-boss/featured.png"/></item><item><title>Code Snippets</title><link>https://yangyangli.top/posts/023-cpp-snippet/</link><pubDate>Thu, 22 Sep 2022 00:00:00 +0000</pubDate><guid>https://yangyangli.top/posts/023-cpp-snippet/</guid><description>Get Random numbers # #include &amp;lt;algorithm&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;iterator&amp;gt; #include &amp;lt;random&amp;gt; int main() { std::random_device rd; std::mt19937 rng(rd()); std::uniform_int_distribution&amp;lt;int&amp;gt; dist6(1, 6); std::generate_n(std::ostream_iterator&amp;lt;int&amp;gt;(std::cout, &amp;#34; &amp;#34;), 10, [&amp;amp;dist6, &amp;amp;rng]() { return dist6(rng); }); return 0; } Get random numbers between min and max # // Generate a random number between min and max (inclusive) // Assumes std::srand() has already been called // Assumes max - min &amp;lt;= RAND_MAX int getRandomNumber(int min, int max) { static constexpr double fraction { 1.</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://yangyangli.top/posts/023-cpp-snippet/featured.jpg"/></item><item><title>C++ Development in Bioinformatics</title><link>https://yangyangli.top/posts/003-build-cpp-development-env-with-htslib/</link><pubDate>Wed, 15 Jun 2022 23:17:30 -0500</pubDate><guid>https://yangyangli.top/posts/003-build-cpp-development-env-with-htslib/</guid><description>1.1 Config Compile Environment # I am currently planning to develop a tool using C++ in both Linux and macOS environments.</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://yangyangli.top/posts/003-build-cpp-development-env-with-htslib/featured.jpg"/></item><item><title>A Python Toolbox - Pybox</title><link>https://yangyangli.top/posts/001-a-wonderful-library-you-must-not-know/</link><pubDate>Fri, 03 Dec 2021 00:03:50 -0600</pubDate><guid>https://yangyangli.top/posts/001-a-wonderful-library-you-must-not-know/</guid><description>0. Changes # Add usage 1.</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://yangyangli.top/posts/001-a-wonderful-library-you-must-not-know/featured.png"/></item></channel></rss>